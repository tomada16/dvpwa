name: DevSecOps Pipeline Full Modular

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Compose services
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose build

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Start stack & run tests
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose up -d
          sleep 15
          docker-compose run --rm sqli sh -c "pytest tests/"
          docker-compose down

  sca_backend:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run pip-audit
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose run --rm sqli sh -c "pip install pip-audit && pip-audit"

  sast:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run Semgrep SAST
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose run --rm sqli sh -c "pip install semgrep && semgrep scan --config auto"

  secrets:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run Gitleaks scan
        run: |
          docker run --rm zricethezav/gitleaks:latest detect --source . --no-git --report-format sarif --exit-code 0

  dast:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Start stack for DAST
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose up -d
          sleep 15
      - name: Run OWASP ZAP DAST scan
        continue-on-error: true
        run: |
          docker-compose exec -T zaproxy zap-baseline.py \
            -t http://sqli:8080 -I
      - name: Stop Docker Compose stack
        run: docker-compose down

  release:
    runs-on: ubuntu-22.04
    needs: [build, test, sca_backend, sast, secrets, dast]
    steps:
      - uses: actions/checkout@v3
      - name: Docker Build & Push
        run: |
          docker build -t ${{ secrets.REGISTRY_URL }}/project:0.1 .
          echo "${{ secrets.REGISTRY_PASS }}" | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin ${{ secrets.REGISTRY_URL }}
          docker push ${{ secrets.REGISTRY_URL }}/project:0.1
