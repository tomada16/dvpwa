name: DevSecOps Pipeline Full Modular

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Compose services
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose build

  sca_backend:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run pip-audit
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose run --rm sqli sh -c "pip install pip-audit && pip-audit"

  sast:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run Semgrep SAST
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose run --rm sqli sh -c "pip install semgrep && semgrep scan --config auto"

  secrets:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run Gitleaks scan
        run: |
          docker run --rm zricethezav/gitleaks:latest detect --source . --no-git --report-format sarif --exit-code 0

  dast:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker Compose stack
        run: |
          docker-compose up -d
          sleep 15

      - name: Prepare report directory
        run: mkdir -p zap-reports

      - name: Run OWASP ZAP DAST scan (simplified, stable network)
        continue-on-error: true
        run: |
          docker run --rm --network app_net \
            -v ${{ github.workspace }}/zap-reports:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://sqli:8080 \
            -J report.json -w report.md -r report.html -I

      - name: Upload ZAP reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/

      - name: Stop Docker Compose stack
        run: docker-compose down

  release:
    runs-on: ubuntu-22.04
    needs: [build, sca_backend, sast, secrets, dast]
    steps:
      - uses: actions/checkout@v3
      - name: Docker Build
        run: |
          docker build -t project:0.1 -f Dockerfile.app .
      - name: Scan Docker image with Trivy (Docker image version)
        continue-on-error: true
        run: |
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity HIGH,CRITICAL --format json -o trivy-report.json project:0.1

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json